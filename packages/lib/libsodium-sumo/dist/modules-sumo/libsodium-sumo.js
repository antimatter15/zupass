!(function (A) {
  function I(A) {
    "use strict";
    var I;
    void 0 === (I = A) && (I = {});
    var g = I;
    "object" != typeof g.sodium &&
      ("object" == typeof global
        ? (g = global)
        : "object" == typeof window && (g = window));
    var C = I;
    return (
      (I.ready = new Promise(function (A, I) {
        ((B = C).onAbort = I),
          (B.print = function (A) {}),
          (B.printErr = function (A) {}),
          (B.onRuntimeInitialized = function () {
            try {
              B._crypto_secretbox_keybytes(), A();
            } catch (A) {
              I(A);
            }
          }),
          (B.useBackupModule = function () {
            return new Promise(function (A, I) {
              var g = {};
              (g.onAbort = I),
                (g.onRuntimeInitialized = function () {
                  Object.keys(C).forEach(function (A) {
                    "getRandomValue" !== A && delete C[A];
                  }),
                    Object.keys(g).forEach(function (A) {
                      C[A] = g[A];
                    }),
                    A();
                });
            });
          });
        var g,
          B = void 0 !== B ? B : {},
          Q = "object" == typeof window,
          E = "function" == typeof importScripts,
          i =
            "object" == typeof process &&
            "object" == typeof process.versions &&
            "string" == typeof process.versions.node &&
            "renderer" != process.type,
          D = Object.assign({}, B),
          w = "";
        if (i) {
          var F = require("fs"),
            h = require("path");
          (w = __dirname + "/"),
            (g = (A) => (
              (A = L(A) ? new URL(A) : h.normalize(A)), F.readFileSync(A)
            )),
            !B.thisProgram &&
              process.argv.length > 1 &&
              process.argv[1].replace(/\\/g, "/"),
            process.argv.slice(2),
            "undefined" != typeof module && (module.exports = B);
        } else
          (Q || E) &&
            (E
              ? (w = self.location.href)
              : "undefined" != typeof document &&
                document.currentScript &&
                (w = document.currentScript.src),
            (w = w.startsWith("blob:")
              ? ""
              : w.substr(0, w.replace(/[?#].*/, "").lastIndexOf("/") + 1)),
            E &&
              (g = (A) => {
                var I = new XMLHttpRequest();
                return (
                  I.open("GET", A, !1),
                  (I.responseType = "arraybuffer"),
                  I.send(null),
                  new Uint8Array(I.response)
                );
              }));
        B.print || function () {}.bind();
        var o = B.printErr || function () {}.bind();
        Object.assign(B, D),
          (D = null),
          B.arguments && B.arguments,
          B.thisProgram && B.thisProgram;
        var N,
          f,
          k,
          S,
          G,
          U,
          y,
          a,
          Y = B.wasmBinary,
          c = !1;
        function M() {
          var A = N.buffer;
          (B.HEAP8 = f = new Int8Array(A)),
            (B.HEAP16 = S = new Int16Array(A)),
            (B.HEAPU8 = k = new Uint8Array(A)),
            (B.HEAPU16 = new Uint16Array(A)),
            (B.HEAP32 = G = new Int32Array(A)),
            (B.HEAPU32 = U = new Uint32Array(A)),
            (B.HEAPF32 = y = new Float32Array(A)),
            (B.HEAPF64 = a = new Float64Array(A));
        }
        var n = [],
          H = [],
          J = [],
          R = 0,
          s = null,
          t = null;
        function e(A) {
          throw (
            (B.onAbort?.(A),
            o((A = "Aborted(" + A + ")")),
            (c = !0),
            (A += ". Build with -sASSERTIONS for more info."),
            new WebAssembly.RuntimeError(A))
          );
        }
        var r,
          K = "data:application/octet-stream;base64,",
          L = (A) => A.startsWith("file://");
        function d(A) {
          return Promise.resolve().then(() =>
            (function (A) {
              if (A == r && Y) return new Uint8Array(Y);
              var I = (function (A) {
                if (((A) => A.startsWith(K))(A))
                  return (function (A) {
                    if (void 0 !== i && i) {
                      var I = Buffer.from(A, "base64");
                      return new Uint8Array(I.buffer, I.byteOffset, I.length);
                    }
                    for (
                      var g = atob(A), C = new Uint8Array(g.length), B = 0;
                      B < g.length;
                      ++B
                    )
                      C[B] = g.charCodeAt(B);
                    return C;
                  })(A.slice(37));
              })(A);
              if (I) return I;
              if (g) return g(A);
              throw "both async and sync fetching of the wasm failed";
            })(A)
          );
        }
        var V = {
            1336: () => B.getRandomValue(),
            1372: () => {
              if (void 0 === B.getRandomValue)
                try {
                  var A = "object" == typeof window ? window : self,
                    I = void 0 !== A.crypto ? A.crypto : A.msCrypto;
                  I = void 0 === I ? C : I;
                  var g = function () {
                    var A = new Uint32Array(1);
                    return I.getRandomValues(A), A[0] >>> 0;
                  };
                  g(), (B.getRandomValue = g);
                } catch (A) {
                  try {
                    var C = require("crypto"),
                      Q = function () {
                        var A = C.randomBytes(4);
                        return (
                          ((A[0] << 24) | (A[1] << 16) | (A[2] << 8) | A[3]) >>>
                          0
                        );
                      };
                    Q(), (B.getRandomValue = Q);
                  } catch (A) {
                    throw "No secure random number generator found";
                  }
                }
            }
          },
          p = (A) => {
            for (; A.length > 0; ) A.shift()(B);
          };
        B.noExitRuntime;
        var q,
          x = "undefined" != typeof TextDecoder ? new TextDecoder() : void 0,
          u = (A, I) =>
            A
              ? ((A, I, g) => {
                  for (var C = I + g, B = I; A[B] && !(B >= C); ) ++B;
                  if (B - I > 16 && A.buffer && x)
                    return x.decode(A.subarray(I, B));
                  for (var Q = ""; I < B; ) {
                    var E = A[I++];
                    if (128 & E) {
                      var i = 63 & A[I++];
                      if (192 != (224 & E)) {
                        var D = 63 & A[I++];
                        if (
                          (E =
                            224 == (240 & E)
                              ? ((15 & E) << 12) | (i << 6) | D
                              : ((7 & E) << 18) |
                                (i << 12) |
                                (D << 6) |
                                (63 & A[I++])) < 65536
                        )
                          Q += String.fromCharCode(E);
                        else {
                          var w = E - 65536;
                          Q += String.fromCharCode(
                            55296 | (w >> 10),
                            56320 | (1023 & w)
                          );
                        }
                      } else Q += String.fromCharCode(((31 & E) << 6) | i);
                    } else Q += String.fromCharCode(E);
                  }
                  return Q;
                })(k, A, I)
              : "",
          X = [],
          v = (A) => {
            var I = (A - N.buffer.byteLength + 65535) / 65536;
            try {
              return N.grow(I), M(), 1;
            } catch (A) {}
          },
          Z = {
            a: (A, I, g, C) => {
              e(
                `Assertion failed: ${u(A)}, at: ` +
                  [
                    I ? u(I) : "unknown filename",
                    g,
                    C ? u(C) : "unknown function"
                  ]
              );
            },
            c: () => {
              e("");
            },
            e: (A, I, g) => k.copyWithin(A, I, I + g),
            b: (A, I, g) =>
              ((A, I, g) => {
                var C = ((A, I) => {
                  var g;
                  for (X.length = 0; (g = k[A++]); ) {
                    var C = 105 != g;
                    (I += (C &= 112 != g) && I % 8 ? 4 : 0),
                      X.push(
                        112 == g ? U[I >> 2] : 105 == g ? G[I >> 2] : a[I >> 3]
                      ),
                      (I += C ? 8 : 4);
                  }
                  return X;
                })(I, g);
                return V[A](...C);
              })(A, I, g),
            d: (A) => {
              var I,
                g = k.length,
                C = 2147483648;
              if ((A >>>= 0) > C) return !1;
              for (var B = 1; B <= 4; B *= 2) {
                var Q = g * (1 + 0.2 / B);
                Q = Math.min(Q, A + 100663296);
                var E = Math.min(
                  C,
                  ((I = Math.max(A, Q)), 65536 * Math.ceil(I / 65536))
                );
                if (v(E)) return !0;
              }
              return !1;
            }
          },
          l = (function () {
            var A,
              I = { a: Z };
            function g(A, I) {
              return (
                (l = A.exports),
                (N = l.f),
                M(),
                (function () {
                  if (
                    (R--,
                    B.monitorRunDependencies?.(R),
                    0 == R && (null !== s && (clearInterval(s), (s = null)), t))
                  ) {
                    var A = t;
                    (t = null), A();
                  }
                })(),
                l
              );
            }
            if ((R++, B.monitorRunDependencies?.(R), B.instantiateWasm))
              try {
                return B.instantiateWasm(I, g);
              } catch (A) {
                return (
                  o(`Module.instantiateWasm callback failed with error: ${A}`),
                  !1
                );
              }
            return (
              (r ??=
                "data:application/octet-stream;base64,"),
              (A = I),
              d(r)
                .then((I) => WebAssembly.instantiate(I, A))
                .then(
                  function (A) {
                    g(A.instance);
                  },
                  (A) => {
                    o(`failed to asynchronously prepare wasm: ${A}`), e(A);
                  }
                ),
              {}
            );
          })();
        function m() {
          function A() {
            q ||
              ((q = !0),
              (B.calledRun = !0),
              c ||
                (p(H),
                B.onRuntimeInitialized?.(),
                (function () {
                  if (B.postRun)
                    for (
                      "function" == typeof B.postRun &&
                      (B.postRun = [B.postRun]);
                      B.postRun.length;

                    )
                      (A = B.postRun.shift()), J.unshift(A);
                  var A;
                  p(J);
                })()));
          }
          R > 0 ||
            ((function () {
              if (B.preRun)
                for (
                  "function" == typeof B.preRun && (B.preRun = [B.preRun]);
                  B.preRun.length;

                )
                  (A = B.preRun.shift()), n.unshift(A);
              var A;
              p(n);
            })(),
            R > 0 ||
              (B.setStatus
                ? (B.setStatus("Running..."),
                  setTimeout(() => {
                    setTimeout(() => B.setStatus(""), 1), A();
                  }, 1))
                : A()));
        }
        if (
          ((B._crypto_aead_chacha20poly1305_ietf_encrypt = (
            A,
            I,
            g,
            C,
            Q,
            E,
            i,
            D,
            w,
            F,
            h
          ) =>
            (B._crypto_aead_chacha20poly1305_ietf_encrypt = l.g)(
              A,
              I,
              g,
              C,
              Q,
              E,
              i,
              D,
              w,
              F,
              h
            )),
          (B._crypto_aead_chacha20poly1305_ietf_decrypt = (
            A,
            I,
            g,
            C,
            Q,
            E,
            i,
            D,
            w,
            F,
            h
          ) =>
            (B._crypto_aead_chacha20poly1305_ietf_decrypt = l.h)(
              A,
              I,
              g,
              C,
              Q,
              E,
              i,
              D,
              w,
              F,
              h
            )),
          (B._crypto_pwhash = (A, I, g, C, Q, E, i, D, w, F, h) =>
            (B._crypto_pwhash = l.i)(A, I, g, C, Q, E, i, D, w, F, h)),
          (B._randombytes_buf = (A, I) => (B._randombytes_buf = l.j)(A, I)),
          (B._randombytes_buf_deterministic = (A, I, g) =>
            (B._randombytes_buf_deterministic = l.k)(A, I, g)),
          (B._sodium_bin2hex = (A, I, g, C) =>
            (B._sodium_bin2hex = l.l)(A, I, g, C)),
          (B._sodium_hex2bin = (A, I, g, C, Q, E, i) =>
            (B._sodium_hex2bin = l.m)(A, I, g, C, Q, E, i)),
          (B._sodium_base64_encoded_len = (A, I) =>
            (B._sodium_base64_encoded_len = l.n)(A, I)),
          (B._sodium_bin2base64 = (A, I, g, C, Q) =>
            (B._sodium_bin2base64 = l.o)(A, I, g, C, Q)),
          (B._sodium_base642bin = (A, I, g, C, Q, E, i, D) =>
            (B._sodium_base642bin = l.p)(A, I, g, C, Q, E, i, D)),
          (B._sodium_init = () => (B._sodium_init = l.q)()),
          (B._sodium_pad = (A, I, g, C, Q) =>
            (B._sodium_pad = l.r)(A, I, g, C, Q)),
          (B._sodium_unpad = (A, I, g, C) =>
            (B._sodium_unpad = l.s)(A, I, g, C)),
          (B._sodium_version_string = () => (B._sodium_version_string = l.t)()),
          (B._sodium_library_version_major = () =>
            (B._sodium_library_version_major = l.u)()),
          (B._sodium_library_version_minor = () =>
            (B._sodium_library_version_minor = l.v)()),
          (B._sodium_library_minimal = () =>
            (B._sodium_library_minimal = l.w)()),
          (B.setValue = function (A, I, g = "i8") {
            switch ((g.endsWith("*") && (g = "*"), g)) {
              case "i1":
              case "i8":
                f[A] = I;
                break;
              case "i16":
                S[A >> 1] = I;
                break;
              case "i32":
                G[A >> 2] = I;
                break;
              case "i64":
                e("to do setValue(i64) use WASM_BIGINT");
              case "float":
                y[A >> 2] = I;
                break;
              case "double":
                a[A >> 3] = I;
                break;
              case "*":
                U[A >> 2] = I;
                break;
              default:
                e(`invalid type for setValue: ${g}`);
            }
          }),
          (B.getValue = function (A, I = "i8") {
            switch ((I.endsWith("*") && (I = "*"), I)) {
              case "i1":
              case "i8":
                return f[A];
              case "i16":
                return S[A >> 1];
              case "i32":
                return G[A >> 2];
              case "i64":
                e("to do getValue(i64) use WASM_BIGINT");
              case "float":
                return y[A >> 2];
              case "double":
                return a[A >> 3];
              case "*":
                return U[A >> 2];
              default:
                e(`invalid type for getValue: ${I}`);
            }
          }),
          (B.UTF8ToString = u),
          (t = function A() {
            q || m(), q || (t = A);
          }),
          B.preInit)
        )
          for (
            "function" == typeof B.preInit && (B.preInit = [B.preInit]);
            B.preInit.length > 0;

          )
            B.preInit.pop()();
        m();
      }).catch(function () {
        return C.useBackupModule();
      })),
      I
    );
  }
  "function" == typeof define && define.amd
    ? define(["exports"], I)
    : "object" == typeof exports && "string" != typeof exports.nodeName
    ? I(exports)
    : (A.libsodium = I(A.libsodium_mod || (A.commonJsStrict = {})));
})(this);
